#!/usr/bin/python

import sys
from Bio import Phylo
import itertools

if len(sys.argv) < 2:
    print 'USAGE: ./treeDist NEWICK_TREE'
    sys.exit(1)

infile = sys.argv[1]

try:
    t = Phylo.read(infile, 'newick')
except Phylo.NewickIO.NewickError, e:
    #sys.stderr.write('%s\n'%infile)
    sys.stderr.write('Could not read tree %s (%s)\n'%(infile, e))
    sys.exit(1)

d = {}
for a, b in itertools.combinations(t.get_terminals(), 2):
    # Fix some names: Bio.Phylo treats numeric IDs as "confidence"
    # So its better to input a modified newick
    a.name = a.name.replace('CHANGETHIS', '-').replace('REMOVETHIS', '')
    b.name = b.name.replace('CHANGETHIS', '-').replace('REMOVETHIS', '')

    d[a.name] = d.get(a.name, {})
    d[a.name][b.name] = t.distance(a,b)
    
    d[b.name] = d.get(b.name, {})
    d[b.name][a.name] = t.distance(b,a)

orgs = set(d.keys())

print '\t'.join( [''] + sorted(orgs) )
for o in sorted(orgs):
    print('\t'.join( [o] + [str(d[o][o1]) if o1 in d[o] else '0' for o1 in sorted(orgs)] ))
